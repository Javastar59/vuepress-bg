(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{218:function(e,t,s){"use strict";s.r(t);var r=s(0),n=Object(r.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),e._m(17),e._v(" "),e._m(18),e._v(" "),e._m(19),e._v(" "),e._m(20),e._v(" "),e._m(21),s("p",[e._v("其内容为：")]),e._v(" "),e._m(22),e._m(23),e._v(" "),e._m(24),e._v(" "),e._m(25),e._v(" "),s("p",[e._v("在 "),s("a",{attrs:{href:"https://store.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Store"),s("OutboundLink")],1),e._v(" 上有非常多的高质量的官方镜像，有可以直接拿来使用的服务类的镜像，如 "),s("a",{attrs:{href:"https://store.docker.com/images/nginx/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("nginx")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"https://store.docker.com/images/redis/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("redis")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"https://store.docker.com/images/mongo/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("mongo")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"https://store.docker.com/images/mysql/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("mysql")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"https://store.docker.com/images/httpd/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("httpd")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"https://store.docker.com/images/php/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("php")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"https://store.docker.com/images/tomcat/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("tomcat")]),s("OutboundLink")],1),e._v(" 等；也有一些方便开发、构建、运行各种语言应用的镜像，如 "),s("a",{attrs:{href:"https://store.docker.com/images/node",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("node")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"https://store.docker.com/images/openjdk/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("openjdk")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"https://store.docker.com/images/python/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("python")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"https://store.docker.com/images/ruby/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("ruby")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"https://store.docker.com/images/golang/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("golang")]),s("OutboundLink")],1),e._v(" 等。可以在其中寻找一个最符合我们最终目标的镜像为基础镜像进行定制。")]),e._v(" "),s("p",[e._v("如果没有找到对应服务的镜像，官方镜像中还提供了一些更为基础的操作系统镜像，如 "),s("a",{attrs:{href:"https://store.docker.com/images/ubuntu/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("ubuntu")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"https://store.docker.com/images/debian/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("debian")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"https://store.docker.com/images/centos/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("centos")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"https://store.docker.com/images/fedora/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("fedora")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"https://store.docker.com/images/alpine/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("alpine")]),s("OutboundLink")],1),e._v(" 等，这些操作系统的软件库为我们提供了更广阔的扩展空间。")]),e._v(" "),e._m(26),e._v(" "),e._m(27),e._v(" "),e._m(28),e._v(" "),e._m(29),e._m(30),e._v(" "),e._m(31),e._v(" "),e._m(32),e._m(33),e._v(" "),e._m(34),e._v(" "),e._m(35),e._v(" "),e._m(36),e._m(37),e._v(" "),e._m(38),e._v(" "),e._m(39),e._m(40)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://cdn.star59.top/bg/20190311/v0NXKLNc4wOF.jpg",alt:"docker"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"获取镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 获取镜像")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("从 Docker 镜像仓库获取镜像的命令是 "),t("code",[this._v("docker pull")]),this._v("。其命令格式为：")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("docker pull "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("Docker Registry 地址"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(":端口号"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("仓库名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(":标签"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("具体的选项可以通过 "),t("code",[this._v("docker pull --help")]),this._v(" 命令看到，这里我们说一下镜像名称的格式。")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ul",[s("li",[e._v("Docker 镜像仓库地址：地址的格式一般是 "),s("code",[e._v("<域名/IP>[:端口号]")]),e._v("。默认地址是 Docker Hub。")]),e._v(" "),s("li",[e._v("仓库名：如之前所说，这里的仓库名是两段式名称，即 "),s("code",[e._v("<用户名>/<软件名>")]),e._v("。对于 Docker Hub，如果不给出用户名，则默认为 "),s("code",[e._v("library")]),e._v("，也就是官方镜像。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"运行镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 运行镜像")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("docker run -it --rm "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("镜像名称:标签"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" /bin/bash\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("docker run")]),this._v(" 就是运行容器的命令。")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ul",[s("li",[s("code",[e._v("-it")]),e._v("：这是两个参数，一个是 "),s("code",[e._v("-i")]),e._v("：交互式操作，一个是 "),s("code",[e._v("-t")]),e._v(" 终端。我们这里打算进入 "),s("code",[e._v("bash")]),e._v(" 执行一些命令并查看返回结果，因此我们需要交互式终端。")]),e._v(" "),s("li",[s("code",[e._v("--rm")]),e._v("：这个参数是说容器退出后随之将其删除。默认情况下，为了排障需求，退出的容器并不会立即删除，除非手动 "),s("code",[e._v("docker rm")]),e._v("。我们这里只是随便执行个命令，看看结果，不需要排障和保留结果，因此使用 "),s("code",[e._v("--rm")]),e._v(" 可以避免浪费空间。")]),e._v(" "),s("li",[s("code",[e._v("bash")]),e._v("：放在镜像名后的是"),s("strong",[e._v("命令")]),e._v("，这里我们希望有个交互式 Shell，因此用的是 "),s("code",[e._v("bash")]),e._v("。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"列出镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列出镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 列出镜像")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("要想列出已经下载下来的镜像，可以使用 "),t("code",[this._v("docker image ls")]),this._v("或者"),t("code",[this._v("docker images")]),this._v(" 命令。")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ docker image "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v("\nREPOSITORY           TAG                 IMAGE ID            CREATED             SIZE\nredis                latest              5f515359c7f8        5 days ago          183 MB\nnginx                latest              05a60462f8ba        5 days ago          181 MB\nmongo                3.2                 fe9198c04d62        5 days ago          342 MB\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("列表包含了 "),s("code",[e._v("仓库名")]),e._v("、"),s("code",[e._v("标签")]),e._v("、"),s("code",[e._v("镜像 ID")]),e._v("、"),s("code",[e._v("创建时间")]),e._v(" 以及 "),s("code",[e._v("所占用的空间")]),e._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"删除本地镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除本地镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 删除本地镜像")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("如果要删除本地的镜像，可以使用 "),t("code",[this._v("docker image rm")]),this._v(" 命令，其格式为：")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ docker image "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("镜像1"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("镜像2"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"dockerfile定制镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile定制镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" Dockerfile定制镜像")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Dockerfile 是一个文本文件，其内包含了一条条的"),t("strong",[this._v("指令(Instruction)")]),this._v("，每一条指令构建一层，因此每一条指令的内容，就是描述该层应当如何构建。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("还以之前定制 "),t("code",[this._v("nginx")]),this._v(" 镜像为例，这次我们使用 Dockerfile 来定制。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在一个空白目录中，建立一个文本文件，并命名为 "),t("code",[this._v("Dockerfile")]),this._v("：")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" mynginx\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cd")]),e._v(" mynginx\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("touch")]),e._v(" Dockerfile\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("FROM nginx\nRUN echo '<h1>Hello, Docker!</h1>' > /usr/share/nginx/html/index.html\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("这个 Dockerfile 很简单，一共就两行。涉及到了两条指令，"),t("code",[this._v("FROM")]),this._v(" 和 "),t("code",[this._v("RUN")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"from-指定基础镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#from-指定基础镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" FROM 指定基础镜像")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("所谓定制镜像，那一定是以一个镜像为基础，在其上进行定制。就像我们之前运行了一个 "),s("code",[e._v("nginx")]),e._v(" 镜像的容器，再进行修改一样，基础镜像是必须指定的。而 "),s("code",[e._v("FROM")]),e._v(" 就是指定"),s("strong",[e._v("基础镜像")]),e._v("，因此一个 "),s("code",[e._v("Dockerfile")]),e._v("中 "),s("code",[e._v("FROM")]),e._v(" 是必备的指令，并且必须是第一条指令。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"run-执行命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#run-执行命令","aria-hidden":"true"}},[this._v("#")]),this._v(" RUN 执行命令")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("RUN")]),this._v(" 指令是用来执行命令行命令的。由于命令行的强大能力，"),t("code",[this._v("RUN")]),this._v(" 指令在定制镜像时是最常用的指令之一。其格式有两种：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("em",[this._v("shell")]),this._v(" 格式："),t("code",[this._v("RUN <命令>")]),this._v("，就像直接在命令行中输入的命令一样。刚才写的 Dockerfile 中的 "),t("code",[this._v("RUN")]),this._v(" 指令就是这种格式。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("RUN echo '<h1>Hello, Docker!</h1>' > /usr/share/nginx/html/index.html\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("em",[this._v("exec")]),this._v(" 格式："),t("code",[this._v('RUN ["可执行文件", "参数1", "参数2"]')]),this._v("，这更像是函数调用中的格式。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("既然 "),t("code",[this._v("RUN")]),this._v(" 就像 Shell 脚本一样可以执行命令，那么我们是否就可以像 Shell 脚本一样把每个命令对应一个 RUN 呢？比如这样：")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-dockerfile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('FROM debian:jessie\n\nRUN apt-get update\nRUN apt-get install -y gcc libc6-dev make\nRUN wget -O redis.tar.gz "http://download.redis.io/releases/redis-3.2.5.tar.gz"\nRUN mkdir -p /usr/src/redis\nRUN tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1\nRUN make -C /usr/src/redis\nRUN make -C /usr/src/redis install\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Dockerfile 中每一个指令都会建立一层，"),t("code",[this._v("RUN")]),this._v(" 也不例外。每一个 "),t("code",[this._v("RUN")]),this._v(" 的行为，就和刚才我们手工建立镜像的过程一样：新建立一层，在其上执行这些命令，执行结束后，"),t("code",[this._v("commit")]),this._v(" 这一层的修改，构成新的镜像。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"构建镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 构建镜像")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在 "),t("code",[this._v("Dockerfile")]),this._v(" 文件所在目录执行：")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ docker build -t nginx:v3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v(".")]),e._v("\nSending build context to Docker daemon 2.048 kB\nStep 1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v(":")]),e._v(" FROM nginx\n ---"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" e43d811ce2f4\nStep 2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v(":")]),e._v(" RUN "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("echo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'<h1>Hello, Docker!</h1>'")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /usr/share/nginx/html/index.html\n ---"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" Running "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v(" 9cdc27646c7b\n ---"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" 44aa4490ce2c\nRemoving intermediate container 9cdc27646c7b\nSuccessfully built 44aa4490ce2c\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("从命令的输出结果中，我们可以清晰的看到镜像的构建过程。在 "),s("code",[e._v("Step 2")]),e._v(" 中，如同我们之前所说的那样，"),s("code",[e._v("RUN")]),e._v(" 指令启动了一个容器 "),s("code",[e._v("9cdc27646c7b")]),e._v("，执行了所要求的命令，并最后提交了这一层 "),s("code",[e._v("44aa4490ce2c")]),e._v("，随后删除了所用到的这个容器 "),s("code",[e._v("9cdc27646c7b")]),e._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("这里我们使用了 "),t("code",[this._v("docker build")]),this._v(" 命令进行镜像构建。其格式为：")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("docker build "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("上下文路径/URL/-"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在这里我们指定了最终镜像的名称 "),t("code",[this._v("-t nginx:v3")]),this._v("，构建成功后，我们可以像之前运行 "),t("code",[this._v("nginx:v2")]),this._v(" 那样来运行这个镜像，其结果会和 "),t("code",[this._v("nginx:v2")]),this._v(" 一样。")])}],!1,null,null,null);t.default=n.exports}}]);